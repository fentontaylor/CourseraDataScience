View(top_counts)
top_counts_sorted <- arrange(top_counts, count)
top_counts_sorted <- arrange(top_counts, desc(count))
View(top_counts_sorted)
quantile(pack_sum$unique, probs = 0.99)
top_unique <- filter(pack_sum, unique>465)
View(top_unique)
top_unique_sorted <- arrange(top_unique, desc(unique))
View(top_unique_sorted)
submit()
submit()
submit()
View(result3)
submit()
submit()
submit()
submit()
library(tidyr)
students
?gather
gather(students, sex, count, -grade)
students2
res <- gather(students2, sex_class, count)
res <- gather(students2, sex_class, count, -grade)
res
?separate
separate(res, sex_class, c("sex", "class"))
submit()
students3
play()
?gather
nxt()
submit()
?spread
submit()
submit()
submit()
submit()
submit()
extract_numeric("class5")
submit()
students4
submit()
submit()
submit()
passed
failed
mutate(passed, status = "passed")
passed <- mutate(passed, status = "passed")
failed <- mutate(failed, status = "failed")
bind_rows(passed, failed)
sat
?separate
submit()
submit()
?contains
submit()
submit()
url = "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv"
download.file(url, "./Data/ACS2006survey.csv")
derp <- read.csv("./Data/ACS2006survey.csv")
head(derp)
derpy <- select(derp, ACR, AGS)
head(derpy)
?which
agLog <- (derpy)
agLog <- c(derpy$ACR == 3 & derpy$AGS ==6)
agLog
which(agLog)
url <- "https://d396qusza40orc.cloudfront.net/getdata%2Fjeff.jpg"
install.packages("jpeg")
library(jpeg)
download.file(url, "./Data/quizjpeg.jpg")
pic <- readJPEG("./Data/quizjpeg.jpg")
?readJPEG
pic <- readJPEG("./Data/quizjpeg.jpg", native = TRUE)
pic <- readJPEG("./Data/quizjpeg.jpg", native = TRUE)
pic <- readJPEG("./Data/quizjpeg.jpg", native = TRUE)
pic
?quantile
quantile(pic, probs = seq(30,80))
quantile(pic, probs = seq(0.3,0.8))
quantile(pic, probs = c(0.3,0.8))
gdp <- read.csv("./Data/GDP.csv")
head(gdp)
str(gdp)
gdp
edstats <- read.csv("./Data/EDSTATS.csv")
head(edstats)
str(edstats)
gdp <- read.csv("./Data/GDP.csv")
head(gdp)
names(gdp)
gdp <- read.csv("./Data/GDP.csv", method = "curl")
gdp$X
gdp$Gross.domestic.product.2014
rename(gdp, ranking = Gross.domestic.product.2014, country_code = X)
gdp1 <- tbl_df(gdp)
gdp1
gdp <- select(gdp1, X:X.3)
gdp
gdp <- select(gdp1, X:X.3, -X.1)
gdp
gdp <- rename(gdp, country_code = X)
gdp
gdp <- rename(gdp, ranking = Gross.domestic.product.2014, economy = X.2, GDP = X.3)
gdp
length(gdp$country_code)
gdp[1:205,1]
View(gdp$country_code)
length(unique(gdp$country_code))
View(gdp)
gdpz <- gdp[5:235,]
gdpz
tail(gdpz)
gdpz[234,2]
edstats
names(edstats)
edstats$CountryCode
?match
cc1 <- gdpz$country_code
cc2 <- edstats$CountryCode
match(cc1, cc2)
length(match(cc1, cc2))
rr <- read.csv("./Data/GDP3.csv")
rr
rr <- select(rr, -X)
rr
rr <- tbl_df(rr)
rr
rr <- mutate(rr, GDP = as.numeric(GDP))
rr
gdpz
cc1
cc2
order(cc1)
arrange(cc1)
?merge
gdpz <- rename(gdpz, CountryCode = country_code)
gdpz
merge(gdpz, edstats, by = CountryCode)
merge(gdpz, edstats, by.x = "CountryCode", by.y = "CountryCode")
zoom <- merge(gdpz, edstats, by.x = "CountryCode", by.y = "CountryCode")
names(zoom)
zoom$CountryCode
gdpz
intersect(gdpz$CountryCode, edstats$CountryCode)
length(intersect(gdpz$CountryCode, edstats$CountryCode))
length(gdpz$CountryCode)
length(edstats$CountryCode)
names(edstats)
select(edstats, CountryCode:Region)
View(gdpz)
gdpz <- gdpz[1:215,]
intersect(gdpz$CountryCode, edstats$CountryCode)
gdpz <- gdpz[1:195,]
intersect(gdpz$CountryCode, edstats$CountryCode)
length(intersect(gdpz$CountryCode, edstats$CountryCode))
combo <- merge(gdpz, edstats, by.x = "CountryCode", by.y = "CountryCode")
combo
names(combo)
head(combo)
group_by(combo, Income.Group)
mutate(combo, ranking = as.numeric(levels(ranking))[ranking])
head(combo)
combo <- tbl_df(combo)
combo
combo <- mutate(combo, ranking = as.numeric(levels(ranking))[ranking])
combo
combo <- mutate(combo, GDP = as.numeric(levels(GDP))[gdp])
combo
combo <- mutate(combo, GDP = as.numeric(levels(GDP))[GDP])
combo
?summarize
summarize(combo, mean(ranking))
rm(list = ls())
gdp <- read.csv("./Data/GDP.csv")
gdp
gdp <- select(gdp, X:X.3, -X.1)
library(dplyr)
gdp <- select(gdp, X:X.3, -X.1)
gdp
names(gdp)
gdp$X
tbl_df(gdp)
gdp <- rename(gdp, CountryCode = X, Ranking = Gross.domestic.product.2014, Economy = X.2, GDP = X.3)
gdp
gdp <- tbl_df(gdp)
gdp
View(gdp)
gdp <- gdp[5:199,]
View(gdp)
gdp2 <- mutate(gdp, Ranking = as.numeric(as.character(Ranking)))
gdp2
gdp2 <- mutate(gdp, GDP = as.numeric(as.character(GDP)))
gdp2
gdp
gdp2 <- mutate(gdp, Ranking = as.numeric(as.character(Ranking)))
gdp2
gdp3 <- mutate(gdp, GDP = as.character(Ranking))
gdp3
rm(gdp3)
gdp2
ayo <-read.csv("./Data/GDPnew.csv"
ayo <-read.csv("./Data/GDPnew.csv")
ayo
tbl_df(ayo)
rmayo
rm(ayo)
yo <- read.csv("./Data/GDPnew.csv")
yo
tbl_df(yo)
gdp
ha <- gdp$GDP
ha
hay <- as.character(ha)
hay
hayy <- as.numeric(hay)
hayy
hay
ha
gdp
yo
yoyo <- tbl_df(yo)
yoyo
edstats
edstats <- read.csv("./Data/EDSTATS.csv")
edstats
edstats <- tbl_df(edstats)
names(yoyo)
combo <- merge(yoyo, edstats, by.x = "Country.Code", by.y = "CountryCode")
combo
head(combo)
combo <- tbl_df(combo)
combo
?group_by
byincome <- group_by(combo, Income.Group)
summarize(byincome, mean(ranking))
summarize(byincome, mean(Ranking))
library(dplyr)
g <- read.csv("./Data/GDPnew.csv")
g
dim()
dim(g)
str(g)
tbl_df(g)
g<-tbl_df(g)
g
ed <- read.csv("./Data/EDSTATS.csv")
ed
ed <- tbl_df(ed)
ed
g
merge(g,ed,by.x="Country.Code", by.y = "CountryCode")
combo <- merge(g,ed,by.x="Country.Code", by.y = "CountryCode")
str(combo)
tbl_df(combo)
combo<-tbl_df(combo)
combo
combo$rankByGroup = cut(combo$Ranking, breaks=quantile(combo$Ranking, probs = seq(0,1,0.2)))
table(combo$rankByGroup,combo$Income.Group)
camdat <- read.csv("./Data/cameras.csv")
head(camdat)
tolower(names(camdat))
names(camdat)
names(camdat) <- tolower(names(camdat))
names(camdat)
splitNames <- strsplit(names(camdat), "\\.")
splitNames[[6]]
myList <- list(letters=c("A","b","c"), numbers = 1:3, matrix(1:25,ncol=5))
myList
myList[[1]]
myList[1]
myList$letters
splitNames[[6]]
splitNames[[6]][1]
splitNames[[6]][1][2]
paste(splitNames[[6]][1],splitNames[[6]][2])
paste(splitNames[[6]][1],splitNames[[6]][2], sep = "")
gg <- read.csv("./Data/")
gg <- read.csv("./Data/GDP.csv")
head(gg)
gg <- tbl_df(gg)
gg <- select(gg, X:X.3, -X.1)
gg
gg1 <- rename(gg, code = X, ranking = Gross.domestic.product.2014, economy = X.2, gdp = X.3)
gg1
View(gg1)
gg1 <- gg1[5:199,]
gg2 <- mutate(gg1, ranking = as.numeric(as.character(ranking)))
gg2
gdpChar <- as.character(gg2$gdp)
gdpChar
comSplit <- strsplit(gdpChar,"\\,")
comSplit
gdpChar2 <- lapply(comSplit, paste(comSplit, sep=""))
gdpChar2 <- sapply(comSplit, paste)
gdpChar2
gdpChar2 <- sapply(comSplit, paste, c(comSplit, sep=""))
gdpChar2
library(stringr)
str_replace_all(gdpChar,",","")
gdpChar2 <- str_replace_all(gdpChar,",","")
gdpChar2
gdpChar3 <- as.numeric(gdpChar2)
gdpChar3
gg2
gg3 <- mutate(gg2, gdp = gdpChar3)
gg3
?str_replace_all
rm(list = c(gg,gg1,gg2,gg3,g,ed,combo,gdpChar,gdpChar2,gdpChar3))
rm(c(gg,gg1,gg2,gg3,g,ed,combo,gdpChar,gdpChar2,gdpChar3))
rm(gg,gg1,gg2,gg3,g,ed,combo,gdpChar,gdpChar2,gdpChar3)
rm(comSplit)
rm(URL,url, zips)
firstElement <- function(x) {x[1]}
sapply(splitNames, firstElement)
rev <- read.csv("./Data/reviews.csv")
rev
sol <- read.csv("./Data/solutions.csv")
head(sol)
names(reviews)
names(rev)
sub("_",""names(rev))
sub("_","",names(rev))
sub("_",".",names(rev))
sub("_"," ",names(rev))
tt <- "this_is_a_tst"
sub("_","",tt)
gsub("_","",tt)
gsub("_","","i_lik_pizza")
sub("_","","i_lik_pizza")
grep("Alameda", camdat$intersection)
table(grepl("Alameda", camdat$intersection))
camdat2 <- camdat[!grepl("Alameda", camdat$intersection),]
camdat2
dim(camdat)
dim(camdat2)
grep("Alameda", camdat$intersection, value = T)
grep("fart", camdat$intersection, value = T)
length(grep("fart", camdat$intersection, value = T))
str_trim
str_trim("this is a string")
str_trim("this is a string            ")
sub(" ","", "this is a string")
gsub(" ","", "this is a string")
rm(rn)
rm(list=ls())
d1 = date()
d1
class(d1)
d2 = Sys.Date()
class(d2)
d2
format(d2, "%a %b %d")
format(d2, "%A, %B %d, %Y")
library("lubridate")
install.packages("lubridate")
library(lubridate)
ymd("19860622")
class(ymd("19860622"))
ymd_hms("2011-08-14 10:13:34")
ymd_hms("2011-08-14 10:13:34", tz="Pacific")
?Sys.timezone
library(swirl)
rm(list = ls())
swirl()
Sys.getlocale("LC_TIME")
library(lubridate)
help(package=lubridate)
this_day <- today()
this_day
year(this_day)
wday(this_day)
wday(this_day, label = T)
wday(this_day, label = TRUE)
this_moment <- now()
this_moment
hour(this_moment)
ymd("1989-05-17")
my_date <- ymd("1989-05-17")
my_date
class(my_date)
ymd("1989 May 17")
mdy("March 12, 1975")
dmy("25081985")
dmy(25081985)
ymd("192012")
ymd("1920-1-2")
dt1
ymd_hms(dt1)
hms("03:22:14")
dt2
ymd(dt2)
update(this_moment, hours = 8, minutes = 34, seconds = 55)
this_moment
this_moment <- update(this_moment, hours = 7, minutes = 9)
this_moment
nyc <- now(tz="America/New_York")
nyc
depart <- nyc + days(2)
depart
depart <- update(depart, hours = 17, minutes = 34)
depart
arrive <- depart + hours(15) + minutes(50)
?with_tz
arrive <- with_tz(arrive, tz = "Asia/Hong_Kong")
arrive
last_time <- mdy("June 17, 2008")
last_time <- mdy("June 17, 2008", tz = "Singapore")
last_time
?interval
how_long <- interval(last_time, arrive)
as.period(how_long)
stopwatch()
swirl()
hey <- read.csv("./Data/survey.csv")
str(hey)
yo <- strsplit(names(hey), "wgtp")
yo
yo[123]
gg <- read.csv("./Data/GDP.csv")
head(gg)
gg <- gg$X.3
gg
library(dplyr)
gg<-tbl_df(gg)
gg <- read.csv("./Data/GDP.csv")
gg <- gg$X.3
gg <- read.csv("./Data/GDP.csv")
gg1 <- tbl_df(gg)
gg1
gg2 <- select(gg1, X:X.3, -X.1)
gg2
gg2 <-rename(gg2, countryCode = X, ranking = Gross.domestic.product.2014, economy = X.2, gdp = X.3)
gg2
View(gg2)
gg3 <- mutate(gg2, ranking = as.numeric(as.character(ranking)))
gg3
gg3 <- gg3[5:199,]
View(gg3)
gg3
gg4 <- mutate(gg3, gdp = as.character(gdp))
gg4
?gsub
gg5 <- mutate(gg4, gdp = gsub(",","",gg4$gdp))
gg5
mean(gg5$gdp)
gg <- mutate(gg5, gdp = as.numeric(gdp))
gg
mean(gdp)
mean(gg$gdp)
gg
View(gg)
mean(gg$gdp)
head(gg,25)
gg
View(gg)
mean(gg$gdp)
save.image("C:/Users/sec/Desktop/Coursera/quiz4.RData")
install.packages("quantmod")
install.packages("quantmod")
library(quantmod)
amzn = getSymbols("AMZN",auto.assign=FALSE)
sampleTimes = index(amzn)
sampleTimes
length(sampleTimes)
class(sampleTimes)
a <- grep("^2012",sampleTimes)
a
length(a)
library(lubridate)
year <- sampleTimes[1261:1510]
year
wday(year)
mondays <- wday(year)==2
mondays
sum(mondays)
source('C:/Users/sec/Desktop/Coursera/projects/ProgrammingAssignment4/run_analysis.R')
run_analysis()
ad <- read.table("allData.txt", header = TRUE)
view(ad)
View(ad)
source('C:/Users/sec/Desktop/Coursera/projects/ProgrammingAssignment4/run_analysis.R')
run_analysis()
source('C:/Users/sec/Desktop/run_analysis_test.R')
run_analysis_test()
run_analysis_test()
run_analysis_test()
run_analysis_test()
run_analysis_test()
run_analysis_test()
run_analysis_test()
run_analysis_test()
source('C:/Users/sec/Desktop/run_analysis_test.R')
run_analysis_test()
run_analysis_test()
source('C:/Users/sec/Desktop/run_analysis_test.R')
run_analysis_test()
source('C:/Users/sec/Desktop/run_analysis_test.R')
run_analysis_test()
run_analysis_test()
rm(ad,DT,doc,rn,rootNode,URL,url,zips)
run_analysis()
source('C:/Users/sec/Desktop/Coursera/projects/ProgrammingAssignment4/run_analysis.R')
run_analysis()
source('C:/Users/sec/Desktop/Coursera/projects/ProgrammingAssignment4/run_analysis.R')
getwd()
setwd("C:/Users/sec/Desktop/Coursera/projects/ProgrammingAssignment4/UCI_HAR_Dataset")
setwd("C:/Users/sec/Desktop/Coursera/projects/ProgrammingAssignment4")
tdm <- read.table("tidyDataMeans.txt", header = TRUE)
View(tdm)
