names(rev)
sub("_",""names(rev))
sub("_","",names(rev))
sub("_",".",names(rev))
sub("_"," ",names(rev))
tt <- "this_is_a_tst"
sub("_","",tt)
gsub("_","",tt)
gsub("_","","i_lik_pizza")
sub("_","","i_lik_pizza")
grep("Alameda", camdat$intersection)
table(grepl("Alameda", camdat$intersection))
camdat2 <- camdat[!grepl("Alameda", camdat$intersection),]
camdat2
dim(camdat)
dim(camdat2)
grep("Alameda", camdat$intersection, value = T)
grep("fart", camdat$intersection, value = T)
length(grep("fart", camdat$intersection, value = T))
str_trim
str_trim("this is a string")
str_trim("this is a string            ")
sub(" ","", "this is a string")
gsub(" ","", "this is a string")
rm(rn)
rm(list=ls())
d1 = date()
d1
class(d1)
d2 = Sys.Date()
class(d2)
d2
format(d2, "%a %b %d")
format(d2, "%A, %B %d, %Y")
library("lubridate")
install.packages("lubridate")
library(lubridate)
ymd("19860622")
class(ymd("19860622"))
ymd_hms("2011-08-14 10:13:34")
ymd_hms("2011-08-14 10:13:34", tz="Pacific")
?Sys.timezone
library(swirl)
rm(list = ls())
swirl()
Sys.getlocale("LC_TIME")
library(lubridate)
help(package=lubridate)
this_day <- today()
this_day
year(this_day)
wday(this_day)
wday(this_day, label = T)
wday(this_day, label = TRUE)
this_moment <- now()
this_moment
hour(this_moment)
ymd("1989-05-17")
my_date <- ymd("1989-05-17")
my_date
class(my_date)
ymd("1989 May 17")
mdy("March 12, 1975")
dmy("25081985")
dmy(25081985)
ymd("192012")
ymd("1920-1-2")
dt1
ymd_hms(dt1)
hms("03:22:14")
dt2
ymd(dt2)
update(this_moment, hours = 8, minutes = 34, seconds = 55)
this_moment
this_moment <- update(this_moment, hours = 7, minutes = 9)
this_moment
nyc <- now(tz="America/New_York")
nyc
depart <- nyc + days(2)
depart
depart <- update(depart, hours = 17, minutes = 34)
depart
arrive <- depart + hours(15) + minutes(50)
?with_tz
arrive <- with_tz(arrive, tz = "Asia/Hong_Kong")
arrive
last_time <- mdy("June 17, 2008")
last_time <- mdy("June 17, 2008", tz = "Singapore")
last_time
?interval
how_long <- interval(last_time, arrive)
as.period(how_long)
stopwatch()
swirl()
hey <- read.csv("./Data/survey.csv")
str(hey)
yo <- strsplit(names(hey), "wgtp")
yo
yo[123]
gg <- read.csv("./Data/GDP.csv")
head(gg)
gg <- gg$X.3
gg
library(dplyr)
gg<-tbl_df(gg)
gg <- read.csv("./Data/GDP.csv")
gg <- gg$X.3
gg <- read.csv("./Data/GDP.csv")
gg1 <- tbl_df(gg)
gg1
gg2 <- select(gg1, X:X.3, -X.1)
gg2
gg2 <-rename(gg2, countryCode = X, ranking = Gross.domestic.product.2014, economy = X.2, gdp = X.3)
gg2
View(gg2)
gg3 <- mutate(gg2, ranking = as.numeric(as.character(ranking)))
gg3
gg3 <- gg3[5:199,]
View(gg3)
gg3
gg4 <- mutate(gg3, gdp = as.character(gdp))
gg4
?gsub
gg5 <- mutate(gg4, gdp = gsub(",","",gg4$gdp))
gg5
mean(gg5$gdp)
gg <- mutate(gg5, gdp = as.numeric(gdp))
gg
mean(gdp)
mean(gg$gdp)
gg
View(gg)
mean(gg$gdp)
head(gg,25)
gg
View(gg)
mean(gg$gdp)
save.image("C:/Users/sec/Desktop/Coursera/quiz4.RData")
install.packages("quantmod")
install.packages("quantmod")
library(quantmod)
amzn = getSymbols("AMZN",auto.assign=FALSE)
sampleTimes = index(amzn)
sampleTimes
length(sampleTimes)
class(sampleTimes)
a <- grep("^2012",sampleTimes)
a
length(a)
library(lubridate)
year <- sampleTimes[1261:1510]
year
wday(year)
mondays <- wday(year)==2
mondays
sum(mondays)
getwd()
pollution <- read.csv("./data/annual_all_2010.csv")
rm(DT)
names(pollution)
pm25 <- grep("[Pp][Mm]2.5", pollution$Parameter.Name)
poll25 <- pollution[pm25,]
View(poll25)
annualPoll25 <- poll25[grep("Annual 2013", poll25$Pollutant.Standard),]
View(annualPoll25)
completeAP <- annualPoll25[grep("[Yy]",annualPoll25$Completeness.Indicator),]
View(completeAP)
names(completeAP)
pollution2 <- completeAP[,c(28,29,51,52,53,1,2,6,7)]
View(pollution2)
names(pollution2)[1] <- c("pm25mean", "pm25std")
names(pollution2)[1:2] <- c("pm25mean", "pm25std")
summary(pollution2)
summary(pollution2$pm25mean)
class(pollution2$County.Name)
class(pollution2$County.Code)
library(plyr)
arrnge(pollution2, County.Name)
arrange(pollution2, County.Name)
p3 <- arrange(pollution2, County.Name)
View(p3)
p4 <- ddply(p3, County.Name, mean(pm25mean))
p4 <- ddply(p3, "County.Name", mean(pm25mean))
p4 <- ddply(p3, "County.Name", mean(p3$pm25mean))
p4 <- ddply(p3, "County.Name", function(x) mean(x$pm25mean))
View(p4)
?ddply
p5 <- ddply(p3, "County.Name", function(x) mean(x$pm25mean), drop = FALSE)
p5 <- ddply(p3, "County.Name", function(x) mean(x$pm25mean), .drop = FALSE)
view(p5)
View(p5)
p3 <- arrange(p3, State.Name)
View(p3)
mean(c("a","b"))
summary(p4)
names(p4) <- c("county", "pm25mean")
View(p4)
boxplot(p4$pm25mean, col = "blue")
boxplot(p4$pm25mean, col = "red")
hist(p4$pm25mean, col = "green")
rug(p4$pm25mean)
hist(p4$pm25mean, col = "green", breaks = 100)
hist(p4$pm25mean, col = "green", breaks = 50)
hist(p4$pm25mean, col = "green", breaks = 40)
abline(h=12)
hist(p4$pm25mean, col = "green",breaks = 40)
abline(v=12, lwd=2)
abline(v=median(p4$pm25mean),col="magenta", lwd=2)
rm(p5)
p5 <- aggregate(pm25mean~County.Name+State.Name, p3, mean)
View(p5)
p5 <- aggregate(pm25mean~County.Name+names(p3), p3, mean)
cols <- names(p3)
cols <- cols[c(2,3,4:length(cols))]
cols
cols <- names(p3)
cols <- cols[c(2,3,5:9]
cols <- cols[c(2,3,5:9)]
cols
p3 <- p3[,1:4,6:9]
p3 <- p3[,c(1:4,6:9)]
p3 <- pollution2[,c(1:4,6:9)]
View(p3)
p6 <- ddply(p3, .(State.Name, County.Name), function(x) colMeans(x[,c(1,2,4:8)]))
class(p3$pm25mean)
class(p3$pm25std)
class(p3$State.Code)
class(p3$County.Code)
p3$County.Code <- as.numeric(p3$County.Code)
p3$State.Code <- as.numeric(p3$State.Code)
p6 <- ddply(p3, .(State.Name, County.Name), function(x) colMeans(x[,c(1,2,4:8)]))
class(p3$County.Code)
p6 <- ddply(p3, c("State.Name","County.Name"), function(x) colMeans(x[,c(1,2,4:8)]))
dataCols <- names(p3)[c(1,2,4:8)]
p6 <- ddply(p3, c("State.Name","County.Name"), function(x) colMeans(x[dataCols]))
groupCols <- c("State.Name","County.Name")
p6<- ddply(p3, groupCols, function(x) colMeans(x[dataCols]))
pp3 <- arrange(p3, State.Name, County.Name)
View(pp3)
p6 <- merge(p5,p3, by="County.Name")
View(p6)
p5 <- aggregate(pm25mean~State.Name+County.Name,p3,mean)
View(p5)
rm(p4,pp3)
p6 <- merge(p3,p5, by=c("State.Name","County.Name"))
View(p6)
p3 <- p3[,c(3,4,1,2,4:8)]
View(p3)
p3 <- pollution2[,c(3,4,1,2,8,9,6,7)]
View(p3)
dataCols <- names(p3)[3:length(p3)]
dataCols
groupCols
pp7 <- ddply(p3, groupCols, function(x) colMeans(x[dataCols]))
View(pp7)
over <- pp7$pm25mean > 12.0
over
badCounties <- pp7[over,1:3]
head(badCounties)
badCounties <- arrange(badCounties, pm25mean)
head(badCounties)
tail(badCounties)
badalpha <- arrange(badCounties, State.Name, County.Name)
View(badalpha)
naughtyList <- lapply(badalpha, paste, badalpha$County.Name, badalpha$State.Name)
naughtyList
naughtyList <- lapply(badalpha, FUN = paste(badalpha$County.Name, "County," badalpha$State.Name)
naughtyList <- lapply(badalpha, FUN = paste(badalpha$County.Name, "County," badalpha$State.Name))
pasteName <- function(county, state) {paste(badalpha$County.Name, "County," badalpha$State.Name)
pasteName <- function(county, state) {
paste(badalpha$County.Name, "County," badalpha$State.Name)
}
pasteName <- function(county, state) {
paste(badalpha$County.Name, "County," badalpha$State.Name)}
pasteName <- function(county, state) { paste(county = badalpha$County.Name, "County," state = badalpha$State.Name)}
pasteName <- function(county, state) {
paste(county = badalpha$County.Name, "County,", state = badalpha$State.Name)}
naughtyList <- sapply(badalpha, pasteName)
naughtyList
naughtyList <- sapply(badalpha[,1], pasteName)
naughtyList
getwd()
names(pp7)[1,2,7,8]
names(pp7)[1:2]
names(pp7)[1][2]
names(pp7)[1:2,7:8]
names(pp7)[1:2] <- c("state", "county")
names(pp7)[7:8] <- c("stateCode", "countyCode")
View(pp7)
write.csv(pp7, "./data/countyAir.csv")
write.csv(pp7, "./data/countyAir.csv", row.names = FALSE)
pollution <- read.csv("./data/countyAir.csv")
pollution
head(pollution)
rm(list=ls())
pollution <- read.csv("./data/countyAir.csv")
library(datasets)
data(cars)
with(cars, plot9(speed,dist))
with(cars, plot(speed,dist))
head(cars)
library(lattice)
state <- data.frame(state.x77, region = state.region)
head(state)
state.x77
xyplot(Life.Exp ~ Income | region, data = state, layout = c(4,1))
library(ggplot2)
data(mpg)
mpg
qplot(displ, hwy, data=mpg)
max(mpg$hwy)
which(mpg$hwy == max(mpg$hwy))
mpg[which(mpg$hwy == max(mpg$hwy)),c("manufacturer", "model")]
mpg[which(mpg$hwy == min(mpg$hwy)),c("manufacturer", "model")]
mpg[which(mpg$hwy == max(mpg$hwy)),c("manufacturer", "model","hwy")]
mpg[which(mpg$hwy == min(mpg$hwy)),c("manufacturer", "model","hwy")]
mpg[which(mpg$city == min(mpg$city)),c("manufacturer", "model","city")]
mpg[which(mpg$cty == min(mpg$cty)),c("manufacturer", "model","cty")]
?par
airquality
airquality <- airquality
hist(airquality$Ozone)
with(airquality, plot(Wind, Ozone))
with(airquality, plot(Month, Temp))
class(airquality$Month)
airquality <- transform(airquality, Month = factor(Month))
with(airquality, plot(Wind, Ozone))
with(airquality, plot(Wind, Ozone), pch = ":)")
with(airquality, plot(Wind, Ozone), pch = "a")
with(airquality, plot(Wind, Ozone), pch = 1)
with(airquality, plot(Wind, Ozone), pch = 2)
with(airquality, plot(Wind, Ozone), pch = ":)")
with(airquality, plot(Wind, Ozone, pch = 2))
with(airquality, plot(Wind, Ozone, pch = 3))
with(airquality, plot(Wind, Ozone, pch = a))
with(airquality, plot(Wind, Ozone, pch = "a"))
with(airquality, plot(Wind, Ozone, pch = ":)"))
with(airquality, plot(Wind, Ozone, pch = "*"))
colors()
airquality
air <- airquality
air
with(air, plot(Wind, Ozone, main = "Ozone and Wind in NYC"))
with(subset(air, Month==5), points(Wind, Ozone, col= "blue"))
with(subset(air, Month==6), points(Wind, Ozone, col= "red"))
with(air, plot(Wind, Ozone, main = "Ozone and Wind in NYC"), type = "n")
with(subset(air, Month==5), points(Wind, Ozone, col= "blue"))
with(subset(air, Month!=5), points(Wind, Ozone, col= "blue"))
with(subset(air, Month!=5), points(Wind, Ozone, col= "red"))
legend("topright", pch=1, col = c('blue','red'), legend = c('May', 'Other Months'))
with(air, plot(Wind, Ozone, main = "Ozone and Wind in NYC"), pch = 20)
with(air, plot(Wind, Ozone, main = "Ozone and Wind in NYC", pch=20))
model <- lm(Ozone~Wind, air)
abline(model, lwd=2)
model
with(air, {
plot(Wind, Ozone, main = "Ozone and Wind")
plot(Solar.R, Ozone, main="Ozone and Solar Radiation")
})
with(air, {
plot(Wind, Ozone, main = "Ozone and Wind")
plot(Solar.R, Ozone, main="Ozone and Solar Radiation")
})
with(air, {
plot(Wind, Ozone, main = "Ozone and Wind")
plot(Solar.R, Ozone, main="Ozone and Solar Radiation")
})
par(mfrow = c(1,2))
with(air, {
plot(Wind, Ozone, main = "Ozone and Wind")
plot(Solar.R, Ozone, main="Ozone and Solar Radiation")
})
x <- rnorm(100)
hist(x)
y <- rnorm(100)
plot(x,y)
par(mfrow = c(1,1))
plot(x,y)
par(mar = c(2,2,2,2))
plot(x,y)
plot(x,y, pch=19)
plot(x,y, pch=20)
plot(x,y, pch=10)
plot(x,y, pch=5)
plot(x,y, pch=7)
plot(x,y, pch=8)
pch()
pch
example("points")
x <- rnorm(100)
y<- rnorm(100)
plot(x,y)
title("Some Bullshit")
par(mar=(5,4,2,2))
par(mar=(5,4,2,2))
par(mar=c(5,4,2,2))
plot(x,y)
par(mar=c(9,4,2,2))
plot(x,y)
par(mar=c(9,1,2,2))
plot(x,y)
par(mar=c(5,4,2,2))
plot(x,y)
title("Some Bullshit")
label(1,-1, "Look at this bullshit")
text(1,-1, "Look at this bullshit")
legend("bottomright", legend = "Bullshit Splatter", pch =1)
fit <- lm(y~x)
abline(fit, lwd = 5, col = "green")
z <- rpois(100,2)
par(mfrow = c(2,1))
plot(x,y,pch=20,col = "orange")
plot(x,z,pch = 20, col = "blue")
par("mar")
par(mfrow = c(1,1))
y <- x + rnorm(100)
g <- gl(2,50, labels = c("Male", "Female"))
g
plot(x,y)
plot(x,y,type = "n")
points(x[g=="Male"])
points(x[g=="Male"], y[g=="Male"])
points(x[g=="Male"], y[g=="Male"], pch = 20 , col = "green")
plot(x,y,type = "n")
points(x[g=="Male"], y[g=="Male"], pch = 20 , col = "green")
points(x[g=="Female"], y[g=="Female"], pch = 20 , col = "pink")
points(x[g=="Female"], y[g=="Female"], pch = 20 , col = "red")
colors()
points(x[g=="Female"], y[g=="Female"], pch = 20 , col = "palevioletred3")
examples
points(x[g=="Female"], y[g=="Female"], pch = 24 , col = "palevioletred3")
points(x[g=="Female"], y[g=="Female"], pch = 23 , col = "palevioletred3")
?Devices
names(datasets)
datasets::
library(datasets)
names(datasets)
faithful
with(faithful, plot(eruptions, waiting))
title("Old Faithful")
examples
examples()
examples("pch")
example("points")
with(faithful, plot(eruptions, waiting), pch = 21 , col= "blue", bg = "turquoise")
with(faithful, plot(eruptions, waiting, pch = 21 , col= "blue", bg = "turquoise"))
with(faithful, plot(eruptions, waiting, pch = 21 , col= "blue", bg = "turquoise", xlab = "Eruptions", ylab = "Waiting Time (min)"))
title("Old Faithful Geyser Data", col = "blue")
pdf(file = "myplot.pdf")
with(faithful, plot(eruptions, waiting, pch = 21 , col= "blue", bg = "turquoise", xlab = "Eruptions", ylab = "Waiting Time (min)"))
title("Old Faithful Geyser Data", col = "blue")
dev.off()
dev.copy(png, "OldFaithful.png")
dev.off()
rm(list = ls())
library(swirl)
swirl()
install_from_swirl("Exploratory Data Analysis")
swirl()
library(swirl)
swirl()
head(pollution)
play()
write.csv(pollution, "./data/pollution.csv")
nxt()
dim(pollution)
summary(pollution$pm25)
quantile(ppm)
boxplot(ppm)
boxplot(ppm, col = "blue")
abline(h = 12)
hist(ppm, col = "green")
rug(ppm)
low
high
hist(ppm, col )
hist(ppm, col = "green", breaks = 100)
rug(ppm)
hist(ppm, col= "green")
abline(v=12, lwd = 2)
abline(v=median(ppm), lwd = 4, col = "magenta")
abline(v=median(ppm), col = "magenta", lwd = 4)
names(pollution)
reg <- table(pollution$region)
reg
barplot(reg, col = "wheat", main = "Number of Counties in Each Region")
boxplot(pm25~region, data = pollution, col = "red")
par(mfrow=c(2,1),mar=c(4,4,2,1))
east <- subset(pollution, pollution$region == "east")
east <- subset(pollution, region == "east")
head(east)
hist(east$pm25, col = "green")
hist(subset(pollution, region == "west")$pm25, col="green")
with(pollution, plot(latitutde, pm25))
with(pollution, plot(latitude, pm25))
abline(h=12, lwd=2, lty=2)
plot(pollution$latitude, ppm, col = pollution$region)
abline(h=12, lwd=2, lty=2)
par(mfrow = c(1,2), mar = c(5,4,2,1))
west <- subset(pollution, region=="west")
plot(west$latitude, west$pm25, main = "West")
plot(east$latitude, east$pm25, main = "East")
setwd("C:/Users/sec/Desktop/Coursera/projects/ExData_plotting1")
data <- "C:/Users/sec/Desktop/Coursera/data/household_power_consumption.txt"
cnames <- names(read.table(data,header= TRUE, sep = ";", nrows = 1))
power <- read.table(data, sep=";", na.strings="?", skip=66637,
nrows=69517-66637, col.names = cnames)
View(power)
source('C:/Users/sec/Desktop/Coursera/projects/ExData_Plotting1/plot1.R')
source('C:/Users/sec/Desktop/Coursera/projects/ExData_Plotting1/plot2.R')
source('C:/Users/sec/Desktop/Coursera/projects/ExData_Plotting1/plot4.R')
plot4()
