g+geom_point()+geom_smooth(method="lm")+facet_grid(.~drv)
g+geom_point()+geom_smooth(method="lm")+facet_grid(.~drv)+ggtitle("Swirl Rules!")
play()
dev.copy(png, file="ggtest.png")
dev.off()
dev.copy(png, file="ggtest2.png")
dev.off()
nxt()
g+geom_point(color = "pink", size = 4, alpha = 1/2)
g+geom_point(size = 4, alpha = 1/2, aes(color=drv))
g+geom_point(aes(color=drv))+labs(title="Swirl Rules!")+ labs(x="Displacement", y = "Hwy Mileage")
g+geom_point(aes(color=drv),size=2,alpha=1/2)+geom_smooth(size=4,linetype=3,method = "lm", se=FALSE)
g+geom_point(color=drv)+theme_bw(base_family = "Times")
g+geom_point(color=drv)+theme_bw(base_family = "Times")
play()
swirl()
g+geom_point(aes(color=drv))+theme_bw(base_family = "Times")
plot(myx,myy,type = "l",ylim=c(-3,3))
g <- ggplot(testdat, aes(x=myx,y=myy))
g+geom_line()
g+geom_line()+ylim(-3,3)
g+geom_line()+coord_cartesian(ylim=c(-3,3))
g <- ggplot(mpg, aes(x=displ,y=hwy,color=factor(year)))
g+geom_point()
g+geom_point()+facet_grid(drv~cyl,margins=TRUE)
g+geom_point()+facet_grid(drv~cyl,margins=TRUE)+geom_smooth(method="lm",se=FALSE,size=2,color="black")
g+geom_point()+facet_grid(drv~cyl,margins=TRUE)+geom_smooth(method="lm",se=FALSE,size=2,color="black")+labs(x="Displacement", y="Highway Miles", title = "Swirl Rules!")
g+geom_point()+facet_grid(drv~cyl,margins=TRUE)+geom_smooth(method="lm",se=FALSE,size=2,color="black")+labs(x="Displacement", y="Highway Mileage", title = "Swirl Rules!")
str(diamonds)
qplot(price, data=diamonds)
range(diamonds$price)
qplot(price, data=diamonds, binwidth=18497/30)
brk
counts
qplot(price, data=diamonds, binwidth=18497/30,fill=cut)
qplot(price, data=diamonds,geom="density")
qplot(price, data=diamonds,geom="density",color=cut)
qplot(carat, price, data = diamonds)
qplot(carat, price, data = diamonds, shape=cut())
qplot(carat, price, data = diamonds, shape=cut
qplot(carat, price, data = diamonds, shape=cut)
qplot(carat, price, data = diamonds, color=cut)
qplot(carat, price, data = diamonds, color=cut,=)+geom_smooth(method = "lm")
qplot(carat, price, data = diamonds, color=cut)+geom_smooth(method = "lm")
qplot(carat, price, data = diamonds, color=cut, facets = .~cut)+geom_smooth(method = "lm")
g <- ggplot(diamonds, aes(depth,price))
summary(g)
g+geom_point(alpha=1/3)
cutpoints <- quantile(diamonds$carat, seq(0,1,length=4), na.rm=TRUE)
cutpoints
diamonds$car2 <- cut(diamonds$carat, cutpoints)
g<-ggplot(diamonds,aes(depth,price))
g+geom_point(alpha=1/3)+facet_grid(cut~car2)
diamonds[myd,]
g+geom_point(alpha=1/3)+facet_grid(cut~car2)+geom_smooth(method = "lm")
g+geom_point(alpha=1/3)+facet_grid(cut~car2)+geom_smooth(method = "lm", size=3,color="pink")
ggplot(diamonds, aes(carat,price))+geom_boxplot()+facet_grid(.~cut)
0
library(nlme)
library(lattice)
xyplot(weight ~ Time | Diet, BodyWeight)
library(datasets)
data("airquality")
head(airquality)
qplot(Wind, Ozone, data = airquality, facets = . ~ factor(Month))
airquality = transform(airquality, Month = factor(Month))
qplot(Wind, Ozone, data = airquality, facets = . ~ Month)
set.seed(1234)
par(mar=c(0,0,0,0))
x<-rnorm(12, mean = rep(1:3, each =4), sd = 0.2)
y<-rnorm(12, mean = rep(c(1,2,1), each = 4), sd=0.2)
plot(x,y,col="blue", pch=19,cex=2)
text(x+.05, y+.05, labels = as.caharacter(1:12))
text(x+.05, y+.05, labels = as.character(1:12))
df<-data.frame(x=x,y=y)
dist(df)
distxy <- dist(df)
hClustering <- hclust(distxy)
plot(hClustering)
library(swirl)
rm(list-ls())
rm(list=ls())
swirl()
dist(dataFrame)
hclust(distxy)
hc<-hclust(distxy)
plot(hc)
plot(as.dendrogram(hc))
abline(h=1.5,col="blue")
abline(h=0.4, col="red")
5
12
abline(h=.05,col="green")
dist(dFsm)
hc
play()
str(dataMatrix)
dataMatrix
nxt()
heatmap(dataMatrix, col = "cm.colors(25)")
heatmap(dataMatrix, col = cm.colors(25))
heatmap(mt)
mt
plot(denmt)
distmt
denmt
plot(denmt)
mtcats
mtcars
mt
mt[,1:6]
mean(mt[1,1:6])
dist(mt)
df
rm(list=ls())
swirl()
cmat
points(cs,cy,col=c("red","orange","purple"),pch=3,cex=2,lwd=2)
points(cx,cy,col=c("red","orange","purple"),pch=3,cex=2,lwd=2)
mdist(x,y,cx,cy)
apply(distTmp,2,which.min)
0
info()
bye()
mtcars
mt
mt<-mtcars[,1,6]
mt<-mtcars[,1:6]
mt
mt$avg <- rowMeans(mt)
mt
names(mt[7])<- "ratio"
mt
names(mt)[7]<- "ratio"
headt(t)
head(mt)
mt$ratio <- mt$hp/mt$wt
mt
order(mt$ratio)
best <- order(mt$ratio)
best <- order(mt$ratio, decreasing = TRUE)
best
mtbest <- mt[best,]
mtbest
library(swirl)
swirl()
swirl()
x
length(x)
length(y)
swirl()
cmat
points(cx,cy,col=c("red","orange","purple"),pch=3, cex=2, lwd=2)
mdist(x,y,cx,cy)
apply(distTmp,2,which.min)
points(x,y,pch=19, cex=2, col = cols1[newClust])
tapply(x,newClust,mean)
tapply(,newClust,mean)
tapply(y,newClust,mean)
points(newCx,newCy,col=cols1,pch=8,cex=2,lwd=2)
mdist(x,y,newCx,newCy)
apply(distTmp2,2,which.min)
points(x,y,pch=19,cex=2,col=cols1[newClust2])
tapply(x,newClust2,mean)
tapply(y,newClust2,mean)
points(finalCx,finalCy,col=cols1,pch=9,cex=2,lwd=2)
kmeans(dataFrame, centers=3)
kmObj$iter
plot(x,y,col=kmObj$cluster,pch=19,cex=2)
points(kmObj$centers, col=c("black","red","green"),pch = 3, cex=3, lwd=3)
plot(x,y,col=kmeans(dataFrame,6)$cluster),pch=19,cex=2)
plot(x,y,col=kmeans(dataFrame,6)$cluster,pch=19,cex=2)
plot(x,y,col=kmeans(dataFrame,6)$cluster,pch=19,cex=2)
plot(x,y,col=kmeans(dataFrame,6)$cluster,pch=19,cex=2)
rm(list=ls())
swirl()
head(dataMatrix)
heatmap(dataMatrix)
addPatt
myedit
myedit("addPatt.R")
myedit("addPatt.R")
myedit("addPatt.R")
bye()
swirl()
rm(list=ls())
swirl()
heatmap(dataMatrix)
head(dataMatrix)
heatmap(dataMatrix)
myedit("addPatt.R")
options(editor = "internal")
myedit("addPatt.R")
myedit("addPatt.R")
source("addPatt.R", local=TRUE)
play()
dataMatrix
nxt()
heatmap(dataMatrix)
mat
svd(mat)
matu %*% diag %*% t(matv)
svd(scale(mat))
prcomp(scale(mat))
svd1$v[,1]
svd1$d
head(constantMatrix)
svd2$d
svd2
svd2$v[,1:2]
svd2$d
dim(faceData)
a1 <- svd1$u %*%
a1 <- (svd1$u[,1] * svd1$d[1]) %*% svd1$v[,1]
a1 <- (svd1$u[,1] * svd1$d[1]) %*% t(svd1$v[,1])
myImage(a1)
a2 <- (svd1$u[,1:2] * svd1$d[1:2]) %*% t(svd1$v[,1:2])
a2 <- svd1$u[,1:2] %*% diag(svd1$d[1:2]) %*% t(svd1$v[,1:2])
myImage(a2)
myImage(svd1$u[,1:5] %*% diag(svd1$d[1:5]) %*% t(svd1$v[,1:5])
myImage(svd1$u[,1:5] %*% diag(svd1$d[1:5]) %*% t(svd1$v[,1:5]))
myImage(svd1$u[,1:10] %*% diag(svd1$d[1:10]) %*% t(svd1$v[,1:10]))
pal <- colorRamp(c("red","blue"))
pal
pal(0)
pal(1)
pal(0.23)
x<-rnorm(10)
y<-rnorm(10)
plot(x,y,pch=19,cex=3, col=pal(0.23))
plot(x,y,pch=19,cex=3, col=pal(0.1))
plot(x,y,pch=19,cex=3, col=pal(0.1))
plot(x,y,pch=19,cex=3, col=pal(0.5))
plot(x,y,pch=19,cex=3, col=pal(0))
plot(x,y,pch=19,cex=3, col=pal(1))
plot(x,y,pch=19,cex=3, col=pal(0.9))
plot(x,y,pch=19,cex=3)
plot(x,y,pch=19,cex=3, col=pal(1:10))
plot(x,y,pch=19,cex=3, col="red")
plot(x,y,pch=19,cex=3, col=pal(seq(0,1,len=10)))
pal(seq(0,1,len=10)
pal(seq(0,1,len=10))
plot(x,y,pch=19,cex=3, col=pal(seq(0,1,len=10))[1:10])
pall <- colorRampPalette(c("red","blue")
pall <- colorRampPalette(c("red","blue"))
plot(x,y,pch=19,cex=3, col=pall(10)
plot(x,y,pch=19,cex=3, col=pall(10))
pall <- colorRampPalette(c("red","purple"))
plot(x,y,pch=19,cex=3, col=pall(10))
pall <- colorRampPalette(c("yellow","purple"))
plot(x,y,pch=19,cex=3, col=pall(10))
order(x)
x <- x[order(x)]
y <- y[order(y)]
plot(x,y,pch=19,cex=3, col=pall(10))
z <- rnorm(50)
w <- rnorm(50)
pall <- colorRampPalette(c("yellow","pink"))
plot(z,w,pch=19,cex=3, col=pall(10))
z <- z[order(z)]
w <- w[order(w)]
plot(z,w,pch=19,cex=3, col=pall(10))
plot(z,w,pch=19,cex=3, col=pall(50))
install.packages("RColorBrewer")
library(RColorBrewer)
plot(z,w,pch=19,cex=3, col= "Blues"
plot(z,w,pch=19,cex=3, col= "Blues")
plot(z,w,pch=19,cex=3, col= brewer.pal(50, "YlGnBu"))
cols <- colorRampPalette(brewer.pal(9,"YlGnBu"))
cols(1)
cols(9)
plot(z,w,pch=19,cex=3, col= cols(50))
cols <- colorRampPalette(brewer.pal(9,"PuBuGn"))
plot(z,w,pch=19,cex=3, col= cols(50))
cols <- colorRampPalette(brewer.pal(,"Spectral"))
cols <- colorRampPalette(brewer.pal(11,"Spectral"))
plot(z,w,pch=19,cex=3, col= cols(50))
x <- sample(x)
x
y <- sample(y)
coco <- colorRampPalette(brewer.pal(8, "Dark2")
coco <- colorRampPalette(brewer.pal(8, "Dark2"))
plot(x,y,pch =19 ,cex=3, col = coco(10))
plot(z,w,pch=19,cex=3, col= cols(50))
plot(z,w,pch=19,cex=3, col= cols(50), alpha = 0.5)
cols <- colorRampPalette(brewer.pal(11,"Spectral"),  alpha=0.5)
warnings()
image(volcano, col = cols(20
))
image(volcano, col = coco(5))
image(volcano, col = coco(20))
image(volcano, col = cols(20
))
brewer.pal.info()
brewer.pal.info
cols <- colorRampPalette(brewer.pal(9,"YlOrRd")
cols <- colorRampPalette(brewer.pal(9,"YlOrRd"))
image(volcano, col = cols(20
))
cols <- colorRampPalette(brewer.pal(9,"Reds"))
image(volcano, col = cols(20))
x <- rnorm(10000)
y <- rnorm(10000)
smoothScatter(x,y)
smoothScatter(x,y, colramp = colorRampPalette(brewer.pal(9,"Reds"))
smoothScatter(x,y, colramp = colorRampPalette(brewer.pal(9,"Reds")))
smoothScatter(x,y, colramp = colorRampPalette(brewer.pal(9,"PuBu")))
smoothScatter(x,y, colramp = colorRampPalette(brewer.pal(9,"Oranges")))
smoothScatter(x,y, colramp = colorRampPalette(brewer.pal(9,"RdBu")))
smoothScatter(x,y, colramp = colorRampPalette(brewer.pal(9,"RdYlBu")))
rm(coco)
pall
rm(pal,pall)
rm(x,y)
cols <- colorRampPalette(brewer.pal(9,"RdPu"))
plot(w,z, pch=19,cex=3, col=cols(50))
plot(w,z, pch=19,cex=3, col=cols(50))
cols <- colorRamp(brewer.pal(9,"RdPu"))
cols
cols(9)
cols(.2)
rgb(cols(seq(0,1,length=50)),alpha = 0.5)
cols <- colorRamp(brewer.pal(9,"RdPu")[1],brewer.pal(9,"RdPu")[9])
cols <- colorRamp("red","purple")
cols <- colorRamp(c("red","purple"))
rgb(cols(seq(0,1,length=50)),alpha = 0.5)
rgb(cols(seq(0,1,length=5)),alpha = 0.5)
cols(seq(0,1,length=50))
rgb(cols(seq(0,1,length=50)),alpha = 0.5)
xcol <- rgb(cols(seq(0,1,length=50)),alpha = 0.5)
rgb(cols(seq(0,1,len=1)))
plot(w,z, pch=19,cex=3, col=cols(50))
plot(w,z, pch=19,cex=3, col=cols(50))
plot(w,z, pch=19,cex=3, col=cols(0.5))
cols(0.5)
plot(w,z, pch=19,cex=3, col=cols(50))
rm(list=ls())
library(swirl)
swirl()
dim(ssd)
names(ssd[,562:563])
table(ssd$subject)
sum(table(ssd$subject))
table(ssd$activity)
sub1<-subset(ssd,subject==1)
dim(sub1)
names(sub1[,1:12])
myedit("showxy.R")
options(editor = "internal")
myedit("showxy.R")
myedit("showXY.R")
showMe(1:6)
mdist <- dist(sub1[,1:3])
hclustering <- hclust(mdist)
myplclust(hclustering,lab.col = unclass(sub1$activity))
mdist <- dist(sub1[,10:12])
hclustering <- hclust(mdist)
myplclust(hclustering, lab.col = unclass(sub1$activity))
svd1 <- svd(scale(sub1[,-c(562:563)]))
dim(svd$u)
dim(svd1$u)
maxCon <- which.max(svd1$v[,2])
mdist <- dist(c(sub1[,10:12],maxCon))
mdist <- dist(sub1[,c(10:12,maxCon)])
hclustering <- hclust(mdist)
myplclust((hclustering, lab.col = unclass(sub1$activity)))
myplclust((hclustering, lab.col = unclass(sub1$activity)))
myplclust(hclustering, lab.col = unclass(sub1$activity))
sub1[maxCon]
names(sub1[maxCon])
kClust <- kmeans(sub1[,-c(562:563)],centers = 6)
table(kClust$cluster, sub1$activity)
kClust <- kmeans(sub1[,-c(562:563)],centers = 6,nstart = 100)
table(kClust$cluster, sub1$activity)
dim(kClust$centers)
laying <- which(kCLust$size==29)
laying <- which(kClust$size==29)
plot(kClust$centers[laying,1:12],pch=19,ylab="Laying Cluster")
names(sub1[.1:3])
names(sub1[,1:3])
walkdown <- which(kclust$size==49)
walkdown <- which(kClust$size==49)
plot(kClust$centers[walkdown,1:12],pch=19,ylab="Walkdown Cluster")
source('C:/Users/sec/Desktop/Coursera/projects/ExData_Plotting2/plot3.R')
plot3()
source('C:/Users/sec/Desktop/Coursera/projects/ExData_Plotting2/plot3.R')
plot3()
neisub <- subset(nei, fips == "24510")
neisub <- transform(neisub, type=as.factor(type))
nei <- readRDS("summarySCC_PM25.rds")
neisub <- subset(nei, fips == "24510")
neisub <- transform(neisub, type=as.factor(type))
grcol <- c("year", "type")
df <- ddply(neisub, grcol, function(x) sum(x["Emissions"]))
names(df)[3] <- "total"
df
class(df$year)
df <- transform(df, year = as.factor(as.character(year)))
df
grcol <- c("year", "type")
df <- ddply(neisub, grcol, function(x) sum(x["Emissions"]))
names(df)[3] <- "total"
df
class(df$type)
p <- ggplot(df, aes(year,total, color = type)) +
geom_bar(stat = "identity")
print(p)
p <- ggplot(df, aes(year,total, fill = type)) +
geom_bar(stat = "identity")
print(p)
p <- ggplot(df, aes(year,total, fill = type)) +
geom_bar(stat = "identity") +
facet_grid(.~type)
print(p)
neisub <- subset(nei, fips == "24510")
neisub <- transform(neisub, type=as.factor(type), year = as.factor(as.character(year)))
grcol <- c("year", "type")
df <- ddply(neisub, grcol, function(x) sum(x["Emissions"]))
names(df)[3] <- "total"
p <- ggplot(df, aes(year,total, fill = type)) +
geom_bar(stat = "identity") +
facet_grid(.~type)
print(p)
p <- ggplot(df, aes(year,total, fill = type)) +
geom_bar(stat = "identity") +
facet_grid(.~type) +
ggtitle("PM2.5 Emissions in Baltimore") +
ylab("PM2.5 Emissions (tons)") +
xlab("Year")
print(p)
source('C:/Users/sec/Desktop/Coursera/projects/ExData_Plotting2/plot3.R')
plot3()
dev.copy(png, file = "plot3.png", width = 480, height = 220)
dev.off()
neisub <- subset(nei, fips == "24510")
neisub <- transform(neisub, type=as.factor(type), year = as.factor(as.character(year)))
grcol <- c("year", "type")
df <- ddply(neisub, grcol, function(x) sum(x["Emissions"]))
names(df)[3] <- "total"
p <- ggplot(df, aes(year,total, fill = type)) +
geom_bar(stat = "identity") +
facet_grid(.~type) +
ggtitle("PM2.5 Emissions in Baltimore") +
ylab("PM2.5 Emissions (tons)") +
xlab("Year")
print(p)
dev.copy(png, file = "plot3.png", width = 480, height = 220)
dev.off(
dev.off()
dev.off()
dev.copy(png, file = "plot3.png")
dev.off()
dev.copy(png, file = "plot3.png", width = 550, height = 220)
dev.off()
ssc <- readRDS("Source_Classification_Code.rds")
neisub <- subset(nei, fips == "24510"  | fips == "06037")
sccsub <- scc[grep("Mobile", scc$EI.Sector),]
sccList <- sccsub$SCC
neisub <- neisub[which(neisub$SCC %in% sccList),]
neisub <- transform(neisub, fips = as.factor(fips), year = as.factor(as.character(year)))
levels(neisub$fips) <- c("LA County", "Baltimore")
nei <- readRDS("summarySCC_PM25.rds")
ssc <- readRDS("Source_Classification_Code.rds")
neisub <- subset(nei, fips == "24510"  | fips == "06037")
sccsub <- scc[grep("Mobile", scc$EI.Sector),]
scc <- readRDS("Source_Classification_Code.rds")
neisub <- subset(nei, fips == "24510"  | fips == "06037")
sccsub <- scc[grep("Mobile", scc$EI.Sector),]
sccList <- sccsub$SCC
neisub <- neisub[which(neisub$SCC %in% sccList),]
neisub <- transform(neisub, fips = as.factor(fips), year = as.factor(as.character(year)))
levels(neisub$fips) <- c("LA County", "Baltimore")
View(neisub)
groupcols <- c("year", "fips")
df <- ddply(neisub, groupcols, function(x) sum(x["Emissions"]))
names(df)[3] <- "total"
df
p <- ggplot(df, aes(year, total, fill=fips)) +
geom_bar(stat = "identity")
print(p)
p <- ggplot(df, aes(year, total, fill=fips)) +
geom_bar(stat = "identity") +
facet_grid(.~fips)
print(p)
p <- ggplot(df, aes(year, total, fill=fips)) +
geom_bar(stat = "identity") +
facet_grid(~.fips)
print(p)
p <- ggplot(df, aes(year, total, fill=fips)) +
geom_bar(stat = "identity") +
facet_grid(fips~.)
print(p)
p <- ggplot(df, aes(year, total, fill=fips)) +
geom_bar(stat = "identity") +
facet_grid(.~fips) +
xlab("Year") +
ylab("Tons PM2.5") +
ggtitle("PM2.5 Emissions in LA County and Baltimore")
print(p)
if(!file.exists("plot6.png")){
print("Saving plot6.png")
dev.copy(png, file = "plot6.png", width = 480, height = 300)
dev.off()
}
if(!file.exists("plot6.png")){
print("Saving plot6.png")
dev.copy(png, file = "plot6.png", width = 480, height = 300)
dev.off()
}
source('C:/Users/sec/Desktop/Coursera/projects/ExData_Plotting2/plot6.R')
plot6()
source('C:/Users/sec/Desktop/Coursera/projects/ExData_Plotting2/plot6.R')
